package Test.practice;

import java.util.*;

public class Practice {

	public static void main(String args[]) {
		Practice test = new Practice();

		ArrayList<Interval> list = new ArrayList<Interval>();

		list.add(new Interval(1, 3));
		list.add(new Interval(2, 4));
		list.add(new Interval(5, 7));
		list.add(new Interval(6, 8));

		test.getMerge(list);

	}

	private void getMerge(ArrayList<Interval> list) {

		Collections.sort(list, new IComparator());
		
		Interval first = list.get(0);
		int start = first.getStart();
		int end = first.getEnd();

		ArrayList<Interval> result = new ArrayList<Interval>();

		for (int i = 1; i < list.size(); i++) {
			Interval current = list.get(i);
			if (current.getStart() <= end) {
				end = Math.max(current.getEnd(), end);
			} else {
				result.add(new Interval(start, end));
				start = current.getStart();
				end = current.getEnd();
			}
		}
		result.add(new Interval(start, end));

		for (Interval i : result) {
			int st = i.start;
			int e = i.end;
			i.toString(st, e);
		}
	}

}

class Interval {

	int start;
	int end;

	Interval(int start, int end) {
		this.start = start;
		this.end = end;

	}

	public int getStart() {
		return start;
	}

	public int getEnd() {
		return end;
	}

	public void toString(int start, int end) {
		System.out.print("[" + start + "," + end + "]");
	}
}

class IComparator implements Comparator<Interval> {
	public int compare(Interval i1, Interval i2) {
		return i1.start - i2.start;
	}
}
